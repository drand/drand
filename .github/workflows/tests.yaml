name: "Build/Tests"
on:
  push:
    branches:
      - master
      - main
      - develop
      - 'release/**'
  pull_request:

concurrency:
  group: ci-${{ github.ref }}-tests
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'
      - name: Build
        env:
          DRAND_TEST_LOGS: "${{ runner.debug == '1' && 'DEBUG' || 'INFO' }}"
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          make drand

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        db_type: [ "boltdb", "memdb", "postgres" ]
        scheme_id: [ "pedersen-bls-chained", "pedersen-bls-unchained", "bls-unchained-on-g1", "bls-unchained-g1-rfc9380" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'
      - run: go get -v -t -d -tags ${{ matrix.db_type }} ./...
      - name: Unit tests
        env:
          DRAND_TEST_LOGS: "${{ runner.debug == '1' && 'DEBUG' || 'INFO' }}"
          SCHEME_ID: ${{ matrix.scheme_id }}
          CI: "true"
        run: make test-unit-${{ matrix.db_type }}

  test-integration:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        db_type: [ "boltdb", "memdb", "postgres" ]
        scheme_id: [ "pedersen-bls-chained", "pedersen-bls-unchained", "bls-unchained-on-g1", "bls-unchained-g1-rfc9380" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'
      - run: go get -v -t -d -tags integration,${{ matrix.db_type }} ./...
      - name: Integration tests
        env:
          DRAND_TEST_LOGS: "${{ runner.debug == '1' && 'DEBUG' || 'INFO' }}"
          SCHEME_ID: ${{ matrix.scheme_id }}
          CI: "true"
        run: make test-integration-${{ matrix.db_type }}

  test-integration-run-demo:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        db_type: [ "boltdb", "memdb", "postgres" ]
        scheme_id: [ "pedersen-bls-chained", "pedersen-bls-unchained", "bls-unchained-on-g1", "bls-unchained-g1-rfc9380" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'
      - run: go get -v -t -d -tags integration,${{ matrix.db_type }} ./...
      - name: Integration tests
        env:
          DRAND_TEST_LOGS: "${{ runner.debug == '1' && 'DEBUG' || 'INFO' }}"
          SCHEME_ID: ${{ matrix.scheme_id }}
          CI: "true"
        run: make test-integration-run-demo-${{ matrix.db_type }}

  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        db_type: [ "boltdb", "memdb", "postgres" ]
        scheme_id: [ "pedersen-bls-chained", "pedersen-bls-unchained", "bls-unchained-on-g1", "bls-unchained-g1-rfc9380" ]
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'
      - run: make coverage-${{ matrix.db_type }}
        env:
          DRAND_TEST_LOGS: "${{ runner.debug == '1' && 'DEBUG' || 'INFO' }}"
          SCHEME_ID: ${{ matrix.scheme_id }}
          CI: "true"
      - run: bash <(curl -s https://codecov.io/bash)
