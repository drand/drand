name: Regression

on:
  pull_request:
    branches: [ master ]

concurrency:
  group: ci-${{ github.ref }}-regression
  cancel-in-progress: true

env:
  DISABLE_VERSION_CHECK: 1

jobs:
  regression:
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        db_type: ["boltdb", "memdb", "postgres"]
        scheme_id: [ "pedersen-bls-chained", "pedersen-bls-unchained", "bls-unchained-on-g1", "bls-unchained-g1-rfc9380" ]
    steps:
      # Deps
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Dir Setup
        run: mkdir -p ~/go/bin

      # Master branch
      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          ref: 'master'

      - name: Build Master
        run: make build_insecure && cp drand ~/go/bin/drand-existing

      # Candidate branch
      - name: Checkout candidate branch
        uses: actions/checkout@v4
      - name: Build Candidate
        run: make build_insecure && cp drand ~/go/bin/drand-candidate

      # Regression test
      - name: Run regression with ${{ matrix.db_type }} database
        id: regression
        env:
          SCHEME_ID: ${{ matrix.scheme_id }}
          CI: "true"
        run: go run ./demo/regression -db=${{ matrix.db_type }} -release ~/go/bin/drand-existing -candidate ~/go/bin/drand-candidate

      # Report
      - id: report
        if: ${{ failure() }}
        name: Save report
        run: |
          GITHUB_OUTPUT=$(cat report.md)
          GITHUB_OUTPUT="${GITHUB_OUTPUT//'%'/'%25'}"
          GITHUB_OUTPUT="${GITHUB_OUTPUT//$'\n'/'%0A'}"
          GITHUB_OUTPUT="${GITHUB_OUTPUT//$'\r'/'%0D'}"

      - name: Record Comment
        if: ${{ failure() }}
        uses: marocchino/sticky-pull-request-comment@v2.3.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: ${{ steps.report.outputs.result }}
