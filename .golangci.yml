issues:
  # Let us display all issues of one type at once
  max-same-issues: 0
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - bodyclose
        - cyclop
        - errcheck
        - forbidigo
        - goconst
        - gocyclo
        - gomnd
        - gosec
        - nilnil
        - noctx
    - path: protobuf/gen.go
      linters:
        - lll
      source: "^//go:generate "
    - path: cmd
      linters:
        - forbidigo # we use Println in our UX
    - path: core/broadcast.go
      linters:
        - interfacer
run:
  skip-dirs:
    - demo
    - test

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  enable-all: true
  disable:
    - containedctx
    - contextcheck
    - cyclop
    - exhaustivestruct
    - exhaustruct
    - forcetypeassert
    - gci
    - gochecknoglobals
    - gocognit
    - godot
    - godox
    - goerr113
    - gofumpt
    - ifshort
    - ireturn
    - nestif
    - nlreturn
    - nonamedreturns
    - nosnakecase
    - paralleltest
    - promlinter
    - tagliatelle
    - testpackage
    - thelper
    - varnamelen
    - wrapcheck
    - wsl


linters-settings:
  dupl:
    threshold: 100
  exhaustive:
    default-signifies-exhaustive: false
  funlen:
    lines: 100
    statements: 50
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    min-complexity: 15
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  golint:
    min-confidence: 0
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
