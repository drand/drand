/*
 * Protobuf file containing empty message definition
 */
syntax = "proto3";

package drand;

option go_package = "github.com/drand/drand/protobuf/drand";
/*option go_package = "drand";*/

import "common/common.proto";

message Empty {
    common.Metadata metadata = 1;
}

// REMINDER: This fields should be kept in sync with IdentityResponse message
message Identity {
    string address = 1;
    bytes key = 2;
    bool tls = 3;
    // BLS signature over the identity to prove possession of the private key
    bytes signature = 4;
}

// Node holds the information related to a server in a group that forms a drand
// network
message Node {
    Identity public = 1;
    uint32 index = 2;
}

// GroupPacket represents a group that is running a drand network (or is in the
// process of creating one or performing a resharing).
message GroupPacket {
    repeated Node nodes = 1; 
    uint32 threshold = 2;
    // period in seconds
    uint32 period = 3;
    uint64 genesis_time = 4;
    uint64 transition_time = 5;
    bytes genesis_seed = 6;
    repeated bytes dist_key = 7;
    // catchup_period in seconds
    uint32 catchup_period = 8;
    string schemeID = 9;
    common.Metadata metadata = 10;
}
message GroupRequest {
    common.Metadata metadata = 1;
}

message ChainInfoRequest {
    common.Metadata metadata = 1;
}

message ChainInfoPacket {
    // marshalled public key 
    bytes public_key = 1;
    // period in seconds
    uint32 period = 2;
    // genesis time of the chain
    int64 genesis_time = 3;
    // hash is included for ease of use - not needing to have a drand client to
    // compute its hash
    bytes hash = 4;
    // hash of the genesis group
    bytes groupHash = 5;
    // indicates a set of values the process will use to act in specific ways
    string schemeID = 6;
    common.Metadata metadata = 7;
}
